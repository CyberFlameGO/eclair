Index.PACKAGES = {"eclair" : [{"name" : "eclair.Eclair", "trait" : "eclair\/Eclair.html", "kind" : "trait", "members_trait" : [{"label" : "Kind", "tail" : "", "member" : "eclair.traits.Tokens.Kind", "link" : "eclair\/traits\/Tokens.html#Kind[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Parser", "tail" : "", "member" : "eclair.traits.Parsers.Parser", "link" : "eclair\/traits\/Parsers.html#Parser[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "Syntax", "tail" : "", "member" : "eclair.traits.Graphs.Syntax", "link" : "eclair\/traits\/Graphs.html#Syntax[+A]extendsGraphs.this.Parser[A]withGraphs.this.Combinable[A]", "kind" : "sealed trait"}, {"label" : "Hide", "tail" : "", "member" : "eclair.traits.Combinators.Hide", "link" : "eclair\/traits\/Combinators.html#HideextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Combinable", "tail" : "", "member" : "eclair.traits.Combinators.Combinable", "link" : "eclair\/traits\/Combinators.html#Combinable[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "acceptWith", "tail" : "(function: PartialFunction[Token, A]): Kind[A]", "member" : "eclair.traits.Tokens.acceptWith", "link" : "eclair\/Eclair.html#acceptWith[A](function:PartialFunction[Tokens.this.Token,A]):Tokens.this.Kind[A]", "kind" : "def"}, {"label" : "acceptWhen", "tail" : "(predicate: (Token) => Boolean): Kind[Token]", "member" : "eclair.traits.Tokens.acceptWhen", "link" : "eclair\/Eclair.html#acceptWhen(predicate:Tokens.this.Token=>Boolean):Tokens.this.Kind[Tokens.this.Token]", "kind" : "def"}, {"label" : "infixRight", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixRight", "link" : "eclair\/Eclair.html#infixRight[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixLeft", "link" : "eclair\/Eclair.html#infixLeft[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.rep1sep", "link" : "eclair\/Eclair.html#rep1sep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.repsep", "link" : "eclair\/Eclair.html#repsep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "many1", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many1", "link" : "eclair\/Eclair.html#many1[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many", "link" : "eclair\/Eclair.html#many[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: => Syntax[A]): Syntax[A]", "member" : "eclair.traits.Combinators.recursive", "link" : "eclair\/Eclair.html#recursive[A](syntax:=>Combinators.this.Syntax[A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: Kind[A]): Syntax[A]", "member" : "eclair.traits.Combinators.elem", "link" : "eclair\/Eclair.html#elem[A](kind:Combinators.this.Kind[A]):Combinators.this.Syntax[A]", "kind" : "implicit def"}, {"label" : "success", "tail" : "(value: A): Syntax[A]", "member" : "eclair.traits.Combinators.success", "link" : "eclair\/Eclair.html#success[A](value:A):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "failure", "tail" : ": Syntax[Nothing]", "member" : "eclair.traits.Combinators.failure", "link" : "eclair\/Eclair.html#failure:Combinators.this.Syntax[Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/Eclair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/Eclair.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/Eclair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/Eclair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/Eclair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/Eclair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/Eclair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/Eclair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/Eclair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/Eclair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/Eclair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/Eclair.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/Eclair.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/Eclair.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/Eclair.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/Eclair.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/Eclair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/Eclair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/Eclair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "eclair.traits.Tokens.Token", "error" : "unsupported entity"}, {"member" : "eclair.traits.Results.ResultValue", "error" : "unsupported entity"}], "shortDescription" : "Contains types and methods for building parsers."}, {"name" : "eclair.EclairAll", "trait" : "eclair\/EclairAll.html", "kind" : "trait", "members_trait" : [{"label" : "Kind", "tail" : "", "member" : "eclair.traits.Tokens.Kind", "link" : "eclair\/traits\/Tokens.html#Kind[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Parser", "tail" : "", "member" : "eclair.traits.Parsers.Parser", "link" : "eclair\/traits\/Parsers.html#Parser[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "Syntax", "tail" : "", "member" : "eclair.traits.Graphs.Syntax", "link" : "eclair\/traits\/Graphs.html#Syntax[+A]extendsGraphs.this.Parser[A]withGraphs.this.Combinable[A]", "kind" : "sealed trait"}, {"label" : "Hide", "tail" : "", "member" : "eclair.traits.Combinators.Hide", "link" : "eclair\/traits\/Combinators.html#HideextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Combinable", "tail" : "", "member" : "eclair.traits.Combinators.Combinable", "link" : "eclair\/traits\/Combinators.html#Combinable[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "ResultValue", "tail" : "", "member" : "eclair.traits.result.ResultAll.ResultValue", "link" : "eclair\/EclairAll.html#ResultValue[+A]=Iterator[A]", "kind" : "type"}, {"label" : "acceptWith", "tail" : "(function: PartialFunction[Token, A]): Kind[A]", "member" : "eclair.traits.Tokens.acceptWith", "link" : "eclair\/EclairAll.html#acceptWith[A](function:PartialFunction[Tokens.this.Token,A]):Tokens.this.Kind[A]", "kind" : "def"}, {"label" : "acceptWhen", "tail" : "(predicate: (Token) => Boolean): Kind[Token]", "member" : "eclair.traits.Tokens.acceptWhen", "link" : "eclair\/EclairAll.html#acceptWhen(predicate:Tokens.this.Token=>Boolean):Tokens.this.Kind[Tokens.this.Token]", "kind" : "def"}, {"label" : "infixRight", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixRight", "link" : "eclair\/EclairAll.html#infixRight[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixLeft", "link" : "eclair\/EclairAll.html#infixLeft[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.rep1sep", "link" : "eclair\/EclairAll.html#rep1sep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.repsep", "link" : "eclair\/EclairAll.html#repsep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "many1", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many1", "link" : "eclair\/EclairAll.html#many1[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many", "link" : "eclair\/EclairAll.html#many[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: => Syntax[A]): Syntax[A]", "member" : "eclair.traits.Combinators.recursive", "link" : "eclair\/EclairAll.html#recursive[A](syntax:=>Combinators.this.Syntax[A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: Kind[A]): Syntax[A]", "member" : "eclair.traits.Combinators.elem", "link" : "eclair\/EclairAll.html#elem[A](kind:Combinators.this.Kind[A]):Combinators.this.Syntax[A]", "kind" : "implicit def"}, {"label" : "success", "tail" : "(value: A): Syntax[A]", "member" : "eclair.traits.Combinators.success", "link" : "eclair\/EclairAll.html#success[A](value:A):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "failure", "tail" : ": Syntax[Nothing]", "member" : "eclair.traits.Combinators.failure", "link" : "eclair\/EclairAll.html#failure:Combinators.this.Syntax[Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/EclairAll.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/EclairAll.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/EclairAll.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/EclairAll.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/EclairAll.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/EclairAll.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/EclairAll.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairAll.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairAll.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairAll.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/EclairAll.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/EclairAll.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/EclairAll.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/EclairAll.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/EclairAll.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/EclairAll.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/EclairAll.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/EclairAll.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/EclairAll.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "eclair.traits.Tokens.Token", "error" : "unsupported entity"}], "shortDescription" : "Contains types and methods for building a parser."}, {"name" : "eclair.EclairSingle", "trait" : "eclair\/EclairSingle.html", "kind" : "trait", "members_trait" : [{"label" : "Kind", "tail" : "", "member" : "eclair.traits.Tokens.Kind", "link" : "eclair\/traits\/Tokens.html#Kind[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Parser", "tail" : "", "member" : "eclair.traits.Parsers.Parser", "link" : "eclair\/traits\/Parsers.html#Parser[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "Syntax", "tail" : "", "member" : "eclair.traits.Graphs.Syntax", "link" : "eclair\/traits\/Graphs.html#Syntax[+A]extendsGraphs.this.Parser[A]withGraphs.this.Combinable[A]", "kind" : "sealed trait"}, {"label" : "Hide", "tail" : "", "member" : "eclair.traits.Combinators.Hide", "link" : "eclair\/traits\/Combinators.html#HideextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Combinable", "tail" : "", "member" : "eclair.traits.Combinators.Combinable", "link" : "eclair\/traits\/Combinators.html#Combinable[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "ResultValue", "tail" : "", "member" : "eclair.traits.result.ResultSingle.ResultValue", "link" : "eclair\/EclairSingle.html#ResultValue[+A]=A", "kind" : "type"}, {"label" : "acceptWith", "tail" : "(function: PartialFunction[Token, A]): Kind[A]", "member" : "eclair.traits.Tokens.acceptWith", "link" : "eclair\/EclairSingle.html#acceptWith[A](function:PartialFunction[Tokens.this.Token,A]):Tokens.this.Kind[A]", "kind" : "def"}, {"label" : "acceptWhen", "tail" : "(predicate: (Token) => Boolean): Kind[Token]", "member" : "eclair.traits.Tokens.acceptWhen", "link" : "eclair\/EclairSingle.html#acceptWhen(predicate:Tokens.this.Token=>Boolean):Tokens.this.Kind[Tokens.this.Token]", "kind" : "def"}, {"label" : "infixRight", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixRight", "link" : "eclair\/EclairSingle.html#infixRight[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixLeft", "link" : "eclair\/EclairSingle.html#infixLeft[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.rep1sep", "link" : "eclair\/EclairSingle.html#rep1sep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.repsep", "link" : "eclair\/EclairSingle.html#repsep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "many1", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many1", "link" : "eclair\/EclairSingle.html#many1[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many", "link" : "eclair\/EclairSingle.html#many[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: => Syntax[A]): Syntax[A]", "member" : "eclair.traits.Combinators.recursive", "link" : "eclair\/EclairSingle.html#recursive[A](syntax:=>Combinators.this.Syntax[A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: Kind[A]): Syntax[A]", "member" : "eclair.traits.Combinators.elem", "link" : "eclair\/EclairSingle.html#elem[A](kind:Combinators.this.Kind[A]):Combinators.this.Syntax[A]", "kind" : "implicit def"}, {"label" : "success", "tail" : "(value: A): Syntax[A]", "member" : "eclair.traits.Combinators.success", "link" : "eclair\/EclairSingle.html#success[A](value:A):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "failure", "tail" : ": Syntax[Nothing]", "member" : "eclair.traits.Combinators.failure", "link" : "eclair\/EclairSingle.html#failure:Combinators.this.Syntax[Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/EclairSingle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/EclairSingle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/EclairSingle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/EclairSingle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/EclairSingle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/EclairSingle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/EclairSingle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairSingle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairSingle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairSingle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/EclairSingle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/EclairSingle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/EclairSingle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/EclairSingle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/EclairSingle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/EclairSingle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/EclairSingle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/EclairSingle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/EclairSingle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "eclair.traits.Tokens.Token", "error" : "unsupported entity"}], "shortDescription" : "Contains types and methods for building a parser."}, {"name" : "eclair.EclairUnit", "trait" : "eclair\/EclairUnit.html", "kind" : "trait", "members_trait" : [{"label" : "Kind", "tail" : "", "member" : "eclair.traits.Tokens.Kind", "link" : "eclair\/traits\/Tokens.html#Kind[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Parser", "tail" : "", "member" : "eclair.traits.Parsers.Parser", "link" : "eclair\/traits\/Parsers.html#Parser[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "Syntax", "tail" : "", "member" : "eclair.traits.Graphs.Syntax", "link" : "eclair\/traits\/Graphs.html#Syntax[+A]extendsGraphs.this.Parser[A]withGraphs.this.Combinable[A]", "kind" : "sealed trait"}, {"label" : "Hide", "tail" : "", "member" : "eclair.traits.Combinators.Hide", "link" : "eclair\/traits\/Combinators.html#HideextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Combinable", "tail" : "", "member" : "eclair.traits.Combinators.Combinable", "link" : "eclair\/traits\/Combinators.html#Combinable[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "ResultValue", "tail" : "", "member" : "eclair.traits.result.ResultUnit.ResultValue", "link" : "eclair\/EclairUnit.html#ResultValue[+A]=Unit", "kind" : "type"}, {"label" : "acceptWith", "tail" : "(function: PartialFunction[Token, A]): Kind[A]", "member" : "eclair.traits.Tokens.acceptWith", "link" : "eclair\/EclairUnit.html#acceptWith[A](function:PartialFunction[Tokens.this.Token,A]):Tokens.this.Kind[A]", "kind" : "def"}, {"label" : "acceptWhen", "tail" : "(predicate: (Token) => Boolean): Kind[Token]", "member" : "eclair.traits.Tokens.acceptWhen", "link" : "eclair\/EclairUnit.html#acceptWhen(predicate:Tokens.this.Token=>Boolean):Tokens.this.Kind[Tokens.this.Token]", "kind" : "def"}, {"label" : "infixRight", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixRight", "link" : "eclair\/EclairUnit.html#infixRight[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(operand: Syntax[A])(operator: Syntax[(A, A) => A]): Syntax[A]", "member" : "eclair.traits.Combinators.infixLeft", "link" : "eclair\/EclairUnit.html#infixLeft[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.rep1sep", "link" : "eclair\/EclairUnit.html#rep1sep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.repsep", "link" : "eclair\/EclairUnit.html#repsep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "many1", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many1", "link" : "eclair\/EclairUnit.html#many1[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(syntax: Syntax[A]): Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many", "link" : "eclair\/EclairUnit.html#many[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: => Syntax[A]): Syntax[A]", "member" : "eclair.traits.Combinators.recursive", "link" : "eclair\/EclairUnit.html#recursive[A](syntax:=>Combinators.this.Syntax[A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: Kind[A]): Syntax[A]", "member" : "eclair.traits.Combinators.elem", "link" : "eclair\/EclairUnit.html#elem[A](kind:Combinators.this.Kind[A]):Combinators.this.Syntax[A]", "kind" : "implicit def"}, {"label" : "success", "tail" : "(value: A): Syntax[A]", "member" : "eclair.traits.Combinators.success", "link" : "eclair\/EclairUnit.html#success[A](value:A):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "failure", "tail" : ": Syntax[Nothing]", "member" : "eclair.traits.Combinators.failure", "link" : "eclair\/EclairUnit.html#failure:Combinators.this.Syntax[Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/EclairUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/EclairUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/EclairUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/EclairUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/EclairUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/EclairUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/EclairUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/EclairUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/EclairUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/EclairUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/EclairUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/EclairUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/EclairUnit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/EclairUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/EclairUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/EclairUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/EclairUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "eclair.traits.Tokens.Token", "error" : "unsupported entity"}], "shortDescription" : "Contains types and methods for building recogniser."}, {"name" : "eclair.PairDecorator", "shortDescription" : "Adds an ~ methods to build pairs.", "members_class" : [{"label" : "~", "tail" : "(second: B): ~[A, B]", "member" : "eclair.PairDecorator.~", "link" : "eclair\/package$$PairDecorator.html#~[B](second:B):A~B", "kind" : "def"}, {"member" : "eclair.PairDecorator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/package$$PairDecorator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/package$$PairDecorator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/package$$PairDecorator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/package$$PairDecorator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/package$$PairDecorator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/package$$PairDecorator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/package$$PairDecorator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/package$$PairDecorator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/package$$PairDecorator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/package$$PairDecorator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/package$$PairDecorator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/package$$PairDecorator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/package$$PairDecorator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/package$$PairDecorator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/package$$PairDecorator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/package$$PairDecorator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/package$$PairDecorator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/package$$PairDecorator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/package$$PairDecorator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "eclair\/package$$PairDecorator.html", "kind" : "class"}, {"name" : "eclair.~", "shortDescription" : "Simply a pair.", "members_case class" : [{"label" : "~", "tail" : "(next: C): ~[~[A, B], C]", "member" : "eclair.~.~", "link" : "eclair\/package$$$tilde.html#~[C](next:C):A~B~C", "kind" : "def"}, {"member" : "eclair.~#<init>", "error" : "unsupported entity"}, {"label" : "_2", "tail" : ": B", "member" : "eclair.~._2", "link" : "eclair\/package$$$tilde.html#_2:B", "kind" : "val"}, {"label" : "_1", "tail" : ": A", "member" : "eclair.~._1", "link" : "eclair\/package$$$tilde.html#_1:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "eclair\/package$$$tilde.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/package$$$tilde.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/package$$$tilde.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/package$$$tilde.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/package$$$tilde.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/package$$$tilde.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/package$$$tilde.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/package$$$tilde.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/package$$$tilde.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/package$$$tilde.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/package$$$tilde.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/package$$$tilde.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/package$$$tilde.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/package$$$tilde.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/package$$$tilde.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/package$$$tilde.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/package$$$tilde.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "eclair\/package$$$tilde.html", "kind" : "case class"}], "eclair.traits" : [{"name" : "eclair.traits.Combinators", "trait" : "eclair\/traits\/Combinators.html", "kind" : "trait", "members_trait" : [{"label" : "infixRight", "tail" : "(operand: (Combinators.this)#Syntax[A])(operator: (Combinators.this)#Syntax[(A, A) => A]): (Combinators.this)#Syntax[A]", "member" : "eclair.traits.Combinators.infixRight", "link" : "eclair\/traits\/Combinators.html#infixRight[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(operand: (Combinators.this)#Syntax[A])(operator: (Combinators.this)#Syntax[(A, A) => A]): (Combinators.this)#Syntax[A]", "member" : "eclair.traits.Combinators.infixLeft", "link" : "eclair\/traits\/Combinators.html#infixLeft[A](operand:Combinators.this.Syntax[A])(operator:Combinators.this.Syntax[(A,A)=>A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: (Combinators.this)#Syntax[A], sep: (Combinators.this)#Syntax[B]): (Combinators.this)#Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.rep1sep", "link" : "eclair\/traits\/Combinators.html#rep1sep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: (Combinators.this)#Syntax[A], sep: (Combinators.this)#Syntax[B]): (Combinators.this)#Syntax[(Vector[A], Vector[B])]", "member" : "eclair.traits.Combinators.repsep", "link" : "eclair\/traits\/Combinators.html#repsep[A,B](rep:Combinators.this.Syntax[A],sep:Combinators.this.Syntax[B]):Combinators.this.Syntax[(Vector[A],Vector[B])]", "kind" : "def"}, {"label" : "many1", "tail" : "(syntax: (Combinators.this)#Syntax[A]): (Combinators.this)#Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many1", "link" : "eclair\/traits\/Combinators.html#many1[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(syntax: (Combinators.this)#Syntax[A]): (Combinators.this)#Syntax[Vector[A]]", "member" : "eclair.traits.Combinators.many", "link" : "eclair\/traits\/Combinators.html#many[A](syntax:Combinators.this.Syntax[A]):Combinators.this.Syntax[Vector[A]]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: => (Combinators.this)#Syntax[A]): (Combinators.this)#Syntax[A]", "member" : "eclair.traits.Combinators.recursive", "link" : "eclair\/traits\/Combinators.html#recursive[A](syntax:=>Combinators.this.Syntax[A]):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: (Combinators.this)#Kind[A]): (Combinators.this)#Syntax[A]", "member" : "eclair.traits.Combinators.elem", "link" : "eclair\/traits\/Combinators.html#elem[A](kind:Combinators.this.Kind[A]):Combinators.this.Syntax[A]", "kind" : "implicit def"}, {"label" : "success", "tail" : "(value: A): (Combinators.this)#Syntax[A]", "member" : "eclair.traits.Combinators.success", "link" : "eclair\/traits\/Combinators.html#success[A](value:A):Combinators.this.Syntax[A]", "kind" : "def"}, {"label" : "failure", "tail" : ": (Combinators.this)#Syntax[Nothing]", "member" : "eclair.traits.Combinators.failure", "link" : "eclair\/traits\/Combinators.html#failure:Combinators.this.Syntax[Nothing]", "kind" : "val"}, {"label" : "Hide", "tail" : "", "member" : "eclair.traits.Combinators.Hide", "link" : "eclair\/traits\/Combinators.html#HideextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Combinable", "tail" : "", "member" : "eclair.traits.Combinators.Combinable", "link" : "eclair\/traits\/Combinators.html#Combinable[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/Combinators.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/Combinators.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/Combinators.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/Combinators.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/Combinators.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/Combinators.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/Combinators.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Combinators.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Combinators.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Combinators.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/Combinators.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/Combinators.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/Combinators.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/Combinators.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/Combinators.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/Combinators.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/Combinators.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/Combinators.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/Combinators.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains combinators for building syntaxes."}, {"name" : "eclair.traits.Graphs", "trait" : "eclair\/traits\/Graphs.html", "kind" : "trait", "members_trait" : [{"label" : "Syntax", "tail" : "", "member" : "eclair.traits.Graphs.Syntax", "link" : "eclair\/traits\/Graphs.html#Syntax[+A]extendsGraphs.this.Parser[A]withGraphs.this.Combinable[A]", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/Graphs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/Graphs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/Graphs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/Graphs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/Graphs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/Graphs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/Graphs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Graphs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Graphs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Graphs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/Graphs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/Graphs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/Graphs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/Graphs.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/Graphs.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/Graphs.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/Graphs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/Graphs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/Graphs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains data structure definitions, as well asthe parsing with derivatives and zipper algorithm."}, {"name" : "eclair.traits.Parsers", "trait" : "eclair\/traits\/Parsers.html", "kind" : "trait", "members_trait" : [{"label" : "Parser", "tail" : "", "member" : "eclair.traits.Parsers.Parser", "link" : "eclair\/traits\/Parsers.html#Parser[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/Parsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/Parsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/Parsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/Parsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/Parsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/Parsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/Parsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Parsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Parsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Parsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/Parsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/Parsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/Parsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/Parsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/Parsers.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/Parsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/Parsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/Parsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/Parsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains the definition of the interface of parsers."}, {"name" : "eclair.traits.Results", "trait" : "eclair\/traits\/Results.html", "kind" : "trait", "members_trait" : [{"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/Results.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/Results.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/Results.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/Results.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/Results.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/Results.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/Results.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Results.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Results.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Results.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/Results.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/Results.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/Results.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/Results.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/Results.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/Results.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/Results.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/Results.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/Results.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "eclair.traits.Results.ResultValue", "error" : "unsupported entity"}], "shortDescription" : "Contains definition of parse results and the interface for building results."}, {"name" : "eclair.traits.Tokens", "trait" : "eclair\/traits\/Tokens.html", "kind" : "trait", "members_trait" : [{"label" : "acceptWith", "tail" : "(function: PartialFunction[Token, A]): Kind[A]", "member" : "eclair.traits.Tokens.acceptWith", "link" : "eclair\/traits\/Tokens.html#acceptWith[A](function:PartialFunction[Tokens.this.Token,A]):Tokens.this.Kind[A]", "kind" : "def"}, {"label" : "acceptWhen", "tail" : "(predicate: (Token) => Boolean): Kind[Token]", "member" : "eclair.traits.Tokens.acceptWhen", "link" : "eclair\/traits\/Tokens.html#acceptWhen(predicate:Tokens.this.Token=>Boolean):Tokens.this.Kind[Tokens.this.Token]", "kind" : "def"}, {"label" : "Kind", "tail" : "", "member" : "eclair.traits.Tokens.Kind", "link" : "eclair\/traits\/Tokens.html#Kind[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/Tokens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/Tokens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/Tokens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/Tokens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/Tokens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/Tokens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/Tokens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Tokens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Tokens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/Tokens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/Tokens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/Tokens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/Tokens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/Tokens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/Tokens.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/Tokens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/Tokens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/Tokens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/Tokens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "eclair.traits.Tokens.Token", "error" : "unsupported entity"}], "shortDescription" : "Contains definitions of tokens and kinds."}], "eclair.traits.result" : [{"name" : "eclair.traits.result.ResultAll", "trait" : "eclair\/traits\/result\/ResultAll.html", "kind" : "trait", "members_trait" : [{"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "ResultValue", "tail" : "", "member" : "eclair.traits.result.ResultAll.ResultValue", "link" : "eclair\/traits\/result\/ResultAll.html#ResultValue[+A]=Iterator[A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/result\/ResultAll.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/result\/ResultAll.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/result\/ResultAll.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/result\/ResultAll.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/result\/ResultAll.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/result\/ResultAll.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/result\/ResultAll.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultAll.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultAll.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultAll.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/result\/ResultAll.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/result\/ResultAll.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/result\/ResultAll.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/result\/ResultAll.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/result\/ResultAll.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/result\/ResultAll.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/result\/ResultAll.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/result\/ResultAll.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/result\/ResultAll.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait for enumeration of all result values."}, {"name" : "eclair.traits.result.ResultSingle", "trait" : "eclair\/traits\/result\/ResultSingle.html", "kind" : "trait", "members_trait" : [{"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "ResultValue", "tail" : "", "member" : "eclair.traits.result.ResultSingle.ResultValue", "link" : "eclair\/traits\/result\/ResultSingle.html#ResultValue[+A]=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/result\/ResultSingle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/result\/ResultSingle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/result\/ResultSingle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/result\/ResultSingle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/result\/ResultSingle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/result\/ResultSingle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/result\/ResultSingle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultSingle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultSingle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultSingle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/result\/ResultSingle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/result\/ResultSingle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/result\/ResultSingle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/result\/ResultSingle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/result\/ResultSingle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/result\/ResultSingle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/result\/ResultSingle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/result\/ResultSingle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/result\/ResultSingle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait for production of single result values."}, {"name" : "eclair.traits.result.ResultUnit", "trait" : "eclair\/traits\/result\/ResultUnit.html", "kind" : "trait", "members_trait" : [{"label" : "UnexpectedEnd", "tail" : "", "member" : "eclair.traits.Results.UnexpectedEnd", "link" : "eclair\/traits\/Results.html#UnexpectedEnd[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "eclair.traits.Results.UnexpectedToken", "link" : "eclair\/traits\/Results.html#UnexpectedToken[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "eclair.traits.Results.Parsed", "link" : "eclair\/traits\/Results.html#Parsed[+A]extendsResults.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "eclair.traits.Results.ParseResult", "link" : "eclair\/traits\/Results.html#ParseResult[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "ResultValue", "tail" : "", "member" : "eclair.traits.result.ResultUnit.ResultValue", "link" : "eclair\/traits\/result\/ResultUnit.html#ResultValue[+A]=Unit", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/traits\/result\/ResultUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/traits\/result\/ResultUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/traits\/result\/ResultUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/traits\/result\/ResultUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/traits\/result\/ResultUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/traits\/result\/ResultUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/traits\/result\/ResultUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/traits\/result\/ResultUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/traits\/result\/ResultUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/traits\/result\/ResultUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/traits\/result\/ResultUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/traits\/result\/ResultUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/traits\/result\/ResultUnit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/traits\/result\/ResultUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/traits\/result\/ResultUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/traits\/result\/ResultUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/traits\/result\/ResultUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait for ignoring result values."}], "eclair.util" : [{"name" : "eclair.util.Available", "shortDescription" : "", "members_case class" : [{"member" : "eclair.util.Available#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "eclair.util.Available.value", "link" : "eclair\/util\/Available.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "eclair\/util\/Available.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "map", "tail" : "(function: (A) => B): Peek[B]", "member" : "eclair.util.Peek.map", "link" : "eclair\/util\/Available.html#map[B](function:A=>B):eclair.util.Peek[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Available.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Available.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Available.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Available.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Available.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Available.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Available.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Available.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Available.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Available.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Available.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Available.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Available.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Available.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Available.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Available.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "eclair\/util\/Available.html", "kind" : "case class"}, {"name" : "eclair.util.Peek", "trait" : "eclair\/util\/Peek.html", "kind" : "trait", "members_trait" : [{"label" : "map", "tail" : "(function: (A) => B): Peek[B]", "member" : "eclair.util.Peek.map", "link" : "eclair\/util\/Peek.html#map[B](function:A=>B):eclair.util.Peek[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Peek.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Peek.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Peek.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Peek.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Peek.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Peek.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Peek.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Peek.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Peek.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Peek.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Peek.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Peek.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/util\/Peek.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Peek.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/util\/Peek.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/util\/Peek.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Peek.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Peek.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Peek.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "eclair.util.Prod", "shortDescription" : "", "object" : "eclair\/util\/Prod$.html", "members_object" : [{"label" : "make", "tail" : "(): Producer[Any]", "member" : "eclair.util.Prod.make", "link" : "eclair\/util\/Prod$.html#make():eclair.util.Producer[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Prod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Prod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Prod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Prod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Prod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Prod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Prod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Prod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Prod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Prod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Prod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Prod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/util\/Prod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Prod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/util\/Prod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/util\/Prod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Prod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Prod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Prod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "eclair.util.Producer", "object" : "eclair\/util\/Producer$.html", "members_object" : [{"label" : "recursive", "tail" : "(inner: (() => Producer[A]) => Producer[A]): Producer[A]", "member" : "eclair.util.Producer.recursive", "link" : "eclair\/util\/Producer$.html#recursive[A](inner:(()=>eclair.util.Producer[A])=>eclair.util.Producer[A]):eclair.util.Producer[A]", "kind" : "def"}, {"label" : "union", "tail" : "(producers: Producer[A]*): Producer[A]", "member" : "eclair.util.Producer.union", "link" : "eclair\/util\/Producer$.html#union[A](producers:eclair.util.Producer[A]*):eclair.util.Producer[A]", "kind" : "def"}, {"label" : "single", "tail" : "(value: A): Producer[A]", "member" : "eclair.util.Producer.single", "link" : "eclair\/util\/Producer$.html#single[A](value:A):eclair.util.Producer[A]", "kind" : "def"}, {"label" : "empty", "tail" : ": Producer[Nothing]", "member" : "eclair.util.Producer.empty", "link" : "eclair\/util\/Producer$.html#empty:eclair.util.Producer[Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Producer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Producer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Producer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Producer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Producer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Producer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Producer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Producer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Producer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Producer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Producer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Producer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/util\/Producer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Producer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/util\/Producer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/util\/Producer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Producer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Producer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Producer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "eclair\/util\/Producer.html", "kind" : "trait", "members_trait" : [{"label" : "~", "tail" : "(that: Producer[B]): Producer[~[A, B]]", "member" : "eclair.util.Producer.~", "link" : "eclair\/util\/Producer.html#~[B](that:eclair.util.Producer[B]):eclair.util.Producer[A~B]", "kind" : "def"}, {"label" : "map", "tail" : "(function: (A) => B): Producer[B]", "member" : "eclair.util.Producer.map", "link" : "eclair\/util\/Producer.html#map[B](function:A=>B):eclair.util.Producer[B]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "eclair.util.Producer.toIterator", "link" : "eclair\/util\/Producer.html#toIterator():Iterator[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Producer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Producer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Producer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Producer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Producer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Producer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Producer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Producer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Producer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Producer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Producer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Producer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "eclair\/util\/Producer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Producer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/util\/Producer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "eclair\/util\/Producer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Producer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Producer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Producer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "skip", "tail" : "(): Unit", "member" : "eclair.util.Producer.skip", "link" : "eclair\/util\/Producer.html#skip():Unit", "kind" : "abstract def"}, {"label" : "peek", "tail" : "(): Peek[A]", "member" : "eclair.util.Producer.peek", "link" : "eclair\/util\/Producer.html#peek:eclair.util.Peek[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "eclair.util.Terminated", "shortDescription" : "", "object" : "eclair\/util\/Terminated$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "eclair\/util\/Terminated$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "eclair\/util\/Terminated$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "map", "tail" : "(function: (Nothing) => B): Peek[B]", "member" : "eclair.util.Peek.map", "link" : "eclair\/util\/Terminated$.html#map[B](function:A=>B):eclair.util.Peek[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Terminated$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Terminated$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Terminated$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Terminated$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Terminated$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Terminated$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Terminated$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Terminated$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Terminated$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Terminated$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Terminated$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Terminated$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Terminated$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/util\/Terminated$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Terminated$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Terminated$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Terminated$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "eclair.util.Unavailable", "shortDescription" : "", "object" : "eclair\/util\/Unavailable$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "eclair\/util\/Unavailable$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "eclair\/util\/Unavailable$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "map", "tail" : "(function: (Nothing) => B): Peek[B]", "member" : "eclair.util.Peek.map", "link" : "eclair\/util\/Unavailable$.html#map[B](function:A=>B):eclair.util.Peek[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "eclair\/util\/Unavailable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "eclair\/util\/Unavailable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "eclair\/util\/Unavailable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "eclair\/util\/Unavailable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "eclair\/util\/Unavailable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "eclair\/util\/Unavailable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "eclair\/util\/Unavailable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Unavailable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Unavailable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "eclair\/util\/Unavailable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "eclair\/util\/Unavailable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "eclair\/util\/Unavailable$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "eclair\/util\/Unavailable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "eclair\/util\/Unavailable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "eclair\/util\/Unavailable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "eclair\/util\/Unavailable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "eclair\/util\/Unavailable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};